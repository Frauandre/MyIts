<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    L'obiettivo principale di questo formato è un semplice formato XML 
   leggibile. La generazione e analisi di
    vari tipi di dati è fatta per mezzo di classi TypeConverter
    associate con classi di dati.

    Esempio:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[la string base64 mime rappresenta un byte array di .NET Framework object]</value>
        <comment>Questo è un commento</comment>
    </data>

    Esistono varie linee"resheader" che contengono un semplice
    nome/coppia di valore.

   Ogni linea di dati contiene un nome e un valore. La linea contiene anche un 
    type o mimetype. Type corrisponde a .NET che supporta
   la conversione testo/valore per mezzo di TypeConverter.
   Le classi che non la supportano sono rappresentate e immagizzinate con 
    mimetype set.

    Il mimetype si usa per oggetti rappresentati e dimostra 
    ResXResourceReader lasciare l'oggetto. Questo non è
   estendible. Per un dato mimetype il valore deve essere impostato di conseguenza:

    Nota - application/x-microsoft.net.object.binary.base64 è il formato
    che ResXResourceWriter genererà, tuttavia il lettore può
  tutti i formati elencati a continuazione.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : L'oggetto deve essere rappresentato coh
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : e codificato con base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : L'oggetto deve essere serializzato con
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : e codificato con base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : L'oggetto deve essere serializzato in byte array
            : usando System.ComponentModel.TypeConverter
            : e codificato con base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>